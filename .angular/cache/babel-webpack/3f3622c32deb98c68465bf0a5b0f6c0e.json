{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(router, authService, formBuilder) {\n      this.router = router;\n      this.authService = authService;\n      this.formBuilder = formBuilder;\n      this.errorMessage = '';\n      this.registerForm = this.formBuilder.group({\n        username: [''],\n        password: [''],\n        confirm: [''],\n        email: [''],\n        displayName: ['']\n      });\n    }\n\n    onSubmit() {\n      console.log(this.registerForm.value);\n\n      if (this.password === this.confirm) {\n        this.authService.create(this.registerForm.value).subscribe({\n          next: res => {\n            console.log(res);\n\n            if (res.success) {\n              alert(res.message);\n              this.router.navigateByUrl(\"/login\");\n            }\n\n            this.errorMessage = res.message;\n          },\n          error: e => {\n            console.error(e);\n          }\n        });\n      } else {\n        this.errorMessage = 'Passwords do not match';\n      }\n    }\n\n    get password() {\n      return this.registerForm.value.password;\n    }\n\n    get confirm() {\n      return this.registerForm.value.confirm;\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 32,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"offset-md-4\", \"col-md-4\"], [\"class\", \"bg-danger mt-2 p-2 text-center text-white\", 4, \"ngIf\"], [\"method\", \"POST\", \"autocomplete\", \"off\", 3, \"formGroup\"], [1, \"form-group\", \"mt-3\"], [\"for\", \"username\", 2, \"min-width\", \"30%\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"Enter username\", \"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\"], [\"for\", \"password\", 2, \"min-width\", \"30%\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"name\", \"confirm\", \"placeholder\", \"Confirm password\", \"id\", \"confirm\", \"formControlName\", \"confirm\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"email\", 2, \"min-width\", \"30%\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter Email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"displayName\", 2, \"min-width\", \"30%\"], [\"type\", \"text\", \"name\", \"displayName\", \"placeholder\", \"Enter Display Name\", \"id\", \"displayName\", \"formControlName\", \"displayName\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"text-right\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-warning\"], [1, \"bg-danger\", \"mt-2\", \"p-2\", \"text-center\", \"text-white\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵelementStart(7, \"fieldset\", 5);\n        i0.ɵɵelementStart(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Username: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"fieldset\", 5);\n        i0.ɵɵelementStart(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Password: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"fieldset\", 5);\n        i0.ɵɵelementStart(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Confirm: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"fieldset\", 5);\n        i0.ɵɵelementStart(20, \"label\", 11);\n        i0.ɵɵtext(21, \"Email: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"fieldset\", 5);\n        i0.ɵɵelementStart(24, \"label\", 13);\n        i0.ɵɵtext(25, \"Displayname: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"fieldset\", 15);\n        i0.ɵɵelementStart(28, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_28_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(29, \" Register \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"a\", 17);\n        i0.ɵɵtext(31, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      }\n    },\n    directives: [i4.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i1.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}